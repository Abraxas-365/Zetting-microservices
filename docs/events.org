

* Event new Workrequest





               -> update workrequest
              |
              |
update user info---->notification update user data
              |
              |
               --> update project that have that user

               -> update workrequest
              |
              |
update project info---->notification update project data




               -> user add project
              |
              |
accept workRequest--->project add user





* Event new workRequest

| exchange    | routing key       |
| WorkRequest | new_workrequest |

#+begin_src go
type WorkRequest struct {
      ID      interface{} `bson:"_id,omitempty" json:"id,omitempty"`
      Owner   User        `bson:"owner" json:"owner,omitempty"`
      Worker  User        `bson:"worker" json:"worker,omitemptyo"`
      Project Project     `bson:"project" json:"project,omitempty"`
      Status  string      `bson:"status" json:"status,omitempty"`
      Created time.Time   `bson:"created_at" json:"created_at,omitempty"`
      Updated time.Time   `bson:"updated_at" json:"updated_at,omitempty"`
  }
type User struct {
	ID    interface{} `bson:"_id,omitempty" json:"id,omitempty"`
	Name  string      `bson:"name" json:"name,omitempty"`
	Image string      `bson:"image" json:"image,omitempty"`
}

type Project struct {
	ID    interface{} `bson:"_id,omitempty" json:"id,omitempty"`
	Name  string      `bson:"name" json:"name,omitempty"`
	Image string      `bson:"image" json:"image,omitempty"`
}
#+end_src


* Event answer workRequest

| exchange    | routing key       |
| WorkRequest | anser_workrequest |

#+begin_src go
type answerWorkrequest struct {
	ID      interface{} `bson:"_id,omitempty" json:"id,omitempty"`
	Status  string      `bson:"status" json:"status,omitempty"`
	Updated time.Time   `bson:"updated_at" json:"updated_at,omitempty"`
}
#+end_src
