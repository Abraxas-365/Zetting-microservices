# Use root/example as user/password credentials
version: '3.9'

services:

  kong:
    image: kong:2.5.0-alpine
    hostname: kong
    container_name: kong
    environment:
      KONG_DATABASE: 'off'
      KONG_PROXY_ACCESS_LOG: '/dev/stdout'
      KONG_ADMIN_ACCESS_LOG: '/dev/stdout'
      KONG_PROXY_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yml"
      command: "kong start"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
        - ./infrastructure-config:/opt/kong
    depends_on:
      - mongo
    networks:
      - zetting

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - zetting

  zetting-user:
    environment:
      MONGODB_URI: mongodb://root:example@mongo:27017/
    build: ./services/user/.
    restart: always
    ports:
      - 3000
    depends_on:
      - mongo
    networks:
      - zetting

  zetting-project:
    environment:
      MONGODB_URI: mongodb://root:example@mongo:27017/
    build: ./services/project/.
    restart: always
    ports:
      - 3001
    depends_on:
      - mongo
    networks:
      - zetting

  zetting-notification:
    environment:
      MONGODB_URI: mongodb://root:example@mongo:27017/
    build: ./services/notification/.
    restart: always
    ports:
      - 3002
    depends_on:
      - mongo
    networks:
      - zetting

  zetting-workrequest:
    environment:
      MONGODB_URI: mongodb://root:example@mongo:27017/
    build: ./services/workRequest/.
    restart: always
    ports:
      - 3003
    depends_on:
      - mongo
    networks:
      - zetting
networks:
  zetting:
    driver: bridge
