* User service

** Models

- User
#+begin_src go
type User struct {
	ID          uuid.UUID `bson:"_id,omitempty" json:"id"`
	Name        string    `bson:"name" json:"name,omitempty"`
	Password    Password  `bson:"password" json:"password,omitempty"`
	PerfilImage string    `bson:"perfil_image" json:"perfil_image,omitempty"`
	Gender      string    `bson:"gender" json:"gender,omitempty"`
	Age         int       `bson:"age" json:"age,omitempty"`
	Profession  string    `bson:"profession" json:"profession,omitempty"`
	Contact     Contact   `bson:"contact" json:"contact,omitempty"`
	Verified    bool      `bson:"verified" json:"verified,omitempty"`
	Created     time.Time `bson:"created_at" json:"created_at,omitempty"`
	Updated     time.Time `bson:"updated_at" json:"updated_at,omitempty"`
}

type UserPublic struct {
	ID          uuid.UUID `bson:"_id,omitempty" json:"id"`
	Name        string    `bson:"name" json:"name,omitempty"`
	PerfilImage string    `bson:"perfil_image" json:"perfil_image,omitempty"`
	Profession  string    `bson:"profession" json:"profession,omitempty"`
	Verified    bool      `bson:"verified" json:"verified,omitempty"`
	Gender      string    `bson:"gender" json:"gender,omitempty"`
	Age         int       `bson:"age" json:"age,omitempty"`
}

#+end_src

** Rest handlers

*** Login
- Method: Post
- Route: /api/users/login
- Params
  #+begin_src go
Email    string  `json:"email"`
Password string `json:"password"`
  #+end_src

*** Register
- Method: Post
- Route: /api/users/register
- Params:
#+begin_src go
type User struct {
	ID          uuid.UUID `bson:"_id,omitempty" json:"id"`
	Name        string    `bson:"name" json:"name,omitempty"`
	Password    Password  `bson:"password" json:"password,omitempty"`
	PerfilImage string    `bson:"perfil_image" json:"perfil_image,omitempty"`
	Gender      string    `bson:"gender" json:"gender,omitempty"`
	Age         int       `bson:"age" json:"age,omitempty"`
	Profession  string    `bson:"profession" json:"profession,omitempty"`
	Contact     Contact   `bson:"contact" json:"contact,omitempty"`
	Verified    bool      `bson:"verified" json:"verified,omitempty"`
	Created     time.Time `bson:"created_at" json:"created_at,omitempty"`
	Updated     time.Time `bson:"updated_at" json:"updated_at,omitempty"`
}
#+end_src


*** Get user by Id
- Method: Get
- Route: /api/users/id=<id>


** Events


*** User Created
- Routing: created
- Event:
#+begin_src go
type UserCreated struct {
	ID          uuid.UUID `bson:"_id,omitempty" json:"id"`
	UserName    string    `bson:"name" json:"name,omitempty"`
	PerfilImage string    `bson:"perfil_image" json:"perfil_image,omitempty"`
	Gender      string    `bson:"gender" json:"gender,omitempty"`
	Age         int       `bson:"age" json:"age,omitempty"`
	Profession  string    `bson:"profession" json:"profession,omitempty"`
}
#+end_src

*** Avatar Seted
- Routing: avatar
- Event:
#+begin_src go
type UserAvatarSeted struct {
	ID          uuid.UUID `bson:"_id,omitempty" json:"id"`
	PerfilImage string    `bson:"perfil_image" json:"perfil_image,omitempty"`
}

#+end_src
*** User Deleted
- Routing: deleted
- Event:
  #+begin_src go
type UserDeleted struct {
	ID uuid.UUID `bson:"_id,omitempty" json:"id"`
}
  #+end_src
*** Name Changed
- Routing: name
- Event:
  #+begin_src go
type UserNameChanged struct {
	ID       uuid.UUID `bson:"_id,omitempty" json:"id"`
	UserName string    `bson:"name" json:"name,omitempty"`
}

  #+end_src
